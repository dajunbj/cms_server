<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cms.module.employee.mapper.EmployeesMapper">

    <!-- 件数取得 -->
    <select id="selectCount" parameterType="map" resultType="Integer">
        SELECT COUNT(1) FROM employees
        <where>
            <if test="employee_id != null and employee_id != ''">
                AND employee_id = #{employee_id}
            </if>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="gender != null and gender != ''">
                AND gender = #{gender}
            </if>
            <if test="email != null and email != ''">
                AND email LIKE CONCAT('%', #{email}, '%')
            </if>
            <if test="employment_status != null and employment_status != ''">
                AND employment_status = #{employment_status}
            </if>
        </where>
    </select>

    <!-- 一覧検索（ページング） -->
    <select id="select" parameterType="map" resultType="com.cms.module.employee.entity.Employees">
        SELECT * FROM employees
        <where>
            <if test="employee_id != null and employee_id != ''">
                AND employee_id = #{employee_id}
            </if>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="gender != null and gender != ''">
                AND gender = #{gender}
            </if>
            <if test="email != null and email != ''">
                AND email LIKE CONCAT('%', #{email}, '%')
            </if>
            <if test="employment_status != null and employment_status != ''">
                AND employment_status = #{employment_status}
            </if>
        </where>
        LIMIT #{pageSize} OFFSET #{offsetVal}
    </select>

    <!-- 追加 -->
    <insert id="insert" parameterType="com.cms.module.employee.entity.Employees">
        INSERT INTO employees (
            employee_id, name, work_years, specialty_skills, age, address, technic_description,
            employee_type, company_id, bp_company_id, department_id, hire_date, resignation_date,
            gender, date_of_birth, phone_number, email, position, salary, bonus, contract_type,
            emergency_contact, emergency_phone, bank_account_name, bank_account_number,
            bank_name, branch_name, employment_status, work_permit_expiry, nationality,
            residence_card_number, residence_status, residence_expiry_date_from, residence_expiry_date_end,
            login_id, pwd, role_id, my_number
        ) VALUES (
            #{employee_id}, #{name}, #{work_years}, #{specialty_skills}, #{age}, #{address}, #{technic_description},
            #{employee_type}, #{company_id}, #{bp_company_id}, #{department_id}, #{hire_date}, #{resignation_date},
            #{gender}, #{date_of_birth}, #{phone_number}, #{email}, #{position}, #{salary}, #{bonus}, #{contract_type},
            #{emergency_contact}, #{emergency_phone}, #{bank_account_name}, #{bank_account_number},
            #{bank_name}, #{branch_name}, #{employment_status}, #{work_permit_expiry}, #{nationality},
            #{residence_card_number}, #{residence_status}, #{residence_expiry_date_from}, #{residence_expiry_date_end},
            #{login_id}, #{pwd}, #{role_id}, #{my_number}
        )
    </insert>

    <!-- 主キー検索 -->
    <select id="selectOne" resultType="com.cms.module.employee.entity.Employees">
        SELECT * FROM employees WHERE employee_id = #{employee_id}
    </select>

    <!-- 更新 -->
    <update id="update" parameterType="com.cms.module.employee.entity.Employees">
        UPDATE employees SET
            name = #{name}, work_years = #{work_years}, specialty_skills = #{specialty_skills},
            age = #{age}, address = #{address}, technic_description = #{technic_description},
            employee_type = #{employee_type}, company_id = #{company_id}, bp_company_id = #{bp_company_id},
            department_id = #{department_id}, hire_date = #{hire_date}, resignation_date = #{resignation_date},
            gender = #{gender}, date_of_birth = #{date_of_birth}, phone_number = #{phone_number},
            email = #{email}, position = #{position}, salary = #{salary}, bonus = #{bonus},
            contract_type = #{contract_type}, emergency_contact = #{emergency_contact}, emergency_phone = #{emergency_phone},
            bank_account_name = #{bank_account_name}, bank_account_number = #{bank_account_number},
            bank_name = #{bank_name}, branch_name = #{branch_name}, employment_status = #{employment_status},
            work_permit_expiry = #{work_permit_expiry}, nationality = #{nationality},
            residence_card_number = #{residence_card_number}, residence_status = #{residence_status},
            residence_expiry_date_from = #{residence_expiry_date_from}, residence_expiry_date_end = #{residence_expiry_date_end},
            login_id = #{login_id}, pwd = #{pwd}, role_id = #{role_id}, my_number = #{my_number}
        WHERE employee_id = #{employee_id}
    </update>
	
	 <delete id="deleteByIds">
	    DELETE FROM employees
	    WHERE employee_id IN
	    <foreach collection="ids" item="id" open="(" separator="," close=")">
	      #{id}
	    </foreach>
	  </delete>
</mapper>